/**
 * Jacoco gradle settings for test coverage.
 */

def fileWithCoverageForAllTests = "$buildDir/jacoco/coverageForAllTests.exec"

jacoco {
	toolVersion = "0.8.3"
}

sonarqube {
	properties["sonar.jacoco.reportPath"] = fileWithCoverageForAllTests
	properties["sonar.tests"] = files(sourceSets.dbIntegrationTest.java.srcDirs, sourceSets.test.java.srcDirs)
	properties["sonar.java.test.binaries"] = files(sourceSets.dbIntegrationTest.output.classesDirs, sourceSets.test.output.classesDirs)
}

task jacocoUnitTestReport(type: JacocoReport) {

	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoUnitTestHtml")
	}

	executionData = files("$buildDir/jacoco/test.exec")
	classDirectories = files(sourceSets.main.java.outputDir)
	sourceDirectories = files(sourceSets.main.java.srcDirs)

	dependsOn test
}

task jacocoDbIntegrationTestReport(type: JacocoReport) {

	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoDbIntegrationTestHtml")
	}

	executionData = files("$buildDir/jacoco/dbIntegrationTest.exec")
	classDirectories = files(sourceSets.main.java.outputDir)
	sourceDirectories = files(sourceSets.main.java.srcDirs)

	dependsOn dbIntegrationTest
}

task jacocoMerge(type: JacocoMerge) {

	executionData = files("$buildDir/jacoco/test.exec", "$buildDir/jacoco/dbIntegrationTest.exec")
	destinationFile = file(fileWithCoverageForAllTests)

	dependsOn test, dbIntegrationTest
}

task jacocoAllTestReport(type: JacocoReport) {

	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoAllTestHtml")
	}

	executionData = files(fileWithCoverageForAllTests)
	classDirectories = files(sourceSets.main.java.outputDir)
	sourceDirectories = files(sourceSets.main.java.srcDirs)

	dependsOn tasks.jacocoMerge
}

tasks.sonarqube.dependsOn jacocoMerge