#!/usr/bin/env groovy

void setBuildStatus(String message, String state) {
	step([
			$class: "GitHubCommitStatusSetter",
			reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/byznass/TiolkTrack"],
			contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "jenkinsValidator"],
			errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
			statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
	])
}

node{

	checkout scm

	try{

		stage('Test'){
			sh './gradlew cleanTest test jacocoMerge'
		}

		stage('SonarQube analysis') {
			withSonarQubeEnv('sonarqube-byznass') {
				withCredentials([
						string(credentialsId: 'sonarqube-byznass_token', variable: 'SONAR_LOGIN'),
						string(credentialsId: 'github-token-sonarqube', variable: 'GITHUB_TOKEN')
				]) {

					// It's important to add --info because of SONARJNKNS-281
					sh '''
						PR_ID=$(echo $BRANCH_NAME | cut -d '-' -f 2)

						./gradlew --info sonarqube \
						-Dsonar.projectKey=TiolkTrack \
						-Dsonar.projectName=TiolkTrack \
						-Dsonar.analysis.mode=preview \
						-Dsonar.login=$SONAR_LOGIN \
						-Dsonar.github.oauth=$GITHUB_TOKEN \
						-Dsonar.github.repository=byznass/TiolkTrack \
						-Dsonar.github.pullRequest=$PR_ID
					'''
				}
			}
		}

		stage('Send result to GitHub') {
			setBuildStatus("Build complete", "SUCCESS")
		}
	} finally{
		junit '**/build/test-results/**/*.xml'
		jacoco execPattern: '**/coverageForAllTests.exec'
	}
}
